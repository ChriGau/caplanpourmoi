<div class="col-xs-12">
  <%= simple_form_for @role do |f| %>
    <%= f.error_notification %>
    <%= f.input :name, placeholder: "Nom", label: false %>

    <div class="col-xs-4 color-block" id="<%= @role.color_id %>" style= "background-color: <%= Color.find(@role.color_id).hexadecimal_code %>;" ></div>    <a class="btn btn-action change-color">Changer la couleur</a>
    <br>
    <div class="col-xs-12 change-color-block">
      <% @color_collection.each do |color_id| %>
        <div class="col-xs-4 color-block" id="<%= color_id %>" style= "background-color: <%= Color.find(color_id).hexadecimal_code %>;" >
        </div>
      <% end %>
      <div class="col-xs-4 add-color fa fa-plus list-metiers metier" style="width: 7vh; height: 7vh; border: 3px solid white;"></div>
    </div>

    <br><br>
    <input type="color" name="hexadecimal_code" id="intermediate">
    <%= f.submit "Valider", class: "btn btn-success" %>


    <!-- Can delete only if no dependancies -->
    <% if !@role.role_users.count.positive? %>
      <%= link_to "Supprimer", role_path(@role), method: :delete, class: "btn btn-default"%>
    <% end %>

  <% end %>
</div>


<script>
  $(document).ready(function() {
    $(".change-color-block").hide();
    $("#intermediate").hide();

    $(".change-color").click(function() {
        $(".change-color-block").toggle();
        resetColorBlocksBackground();
    });

    // 3 functions to convert rgb in hexadecimal
    function hex(x) {
      return isNaN(x) ? "00" : hexDigits[(x - x % 16) / 16] + hexDigits[x % 16];
     }

    var hexDigits = new Array
          ("0","1","2","3","4","5","6","7","8","9","a","b","c","d","e","f");

    function rgbToHex(rgb) {
     rgb = rgb.match(/^rgb\((\d+),\s*(\d+),\s*(\d+)\)$/);
     return "#" + hex(rgb[1]) + hex(rgb[2]) + hex(rgb[3]);
    }

    function resetColorBlocksBackground() {
      var color_blocks = document.getElementsByClassName('color-block');
      for (var i = 0; i < color_blocks.length; i++ ) {
        color_blocks[i].style.border = "3px solid white";
      }
    }

    // when clicking on a predefined color
    $(".color-block").click(function(elem) {
      // get corresponding id
      var selected_color_id = elem.currentTarget.id;

      // set border (only of the selected one) as red
      resetColorBlocksBackground();
      var selected_color_box = document.getElementById(selected_color_id);
      selected_color_box.style.border = '2px solid red';

      // get rgb color
      var selected_color_rgb = elem.currentTarget.style.backgroundColor;

      // set to hexadecimal
      var selected_color_hexadecimal = rgbToHex(selected_color_rgb);

      // set intermediate value to corresponding hex
      document.getElementById("intermediate").value = selected_color_hexadecimal;
    });

    // when clicking on adding a color
    $(".add-color").click(function(elem){
      $('#intermediate').unbind();
      $("#intermediate").toggle();
    });

  }); // closing document.ready
</script>


