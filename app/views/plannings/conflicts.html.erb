<%= render 'shared/planningsteps', locals: {planning: @planning, url: @url} %>

<div class="conflicts">
  <div class="row">
    <div id = "calendar">
    </div>
  </div>
</div>

<!-- ___________________________ JS __________________________________ -->

<%= content_for(:after_js) do %>
<script>
    // hide slot form
    $("#slot_form").hide();
    // make roles draggable
    $('#my-draggable').draggable({
      revert: true,      // immediately snap back to original position
      revertDuration: 0  //
    });
    // assign default event data to draggable elements
    $('.draggable').data('duration', '03:00');
  </script>
  <!-- enable bootstrap in simple form -->
  <script type="text/javascript">
    $(function () {
      $('#datetimepicker1').datetimepicker();
      $('#datetimepicker2').datetimepicker();
    });
  </script>
  <script>
    $('#calendar').fullCalendar({
      //calendar attributes
      header: {
        left: '',
        center: '', //title
        right: 'agendaWeek,agendaDay',
      },
      themeSystem: 'bootstrap3',
      allDaySlot: false,
      locale: "fr",
      editable: true, // events on the calendar can be modified
      droppable: true, // allows things to be dropped onto the calendar
      selectable: true,
      drop: function(date) {
        alert("Dropped on " + date.format());
        console.log("DROPPED!!!!!!!!!!")
      },
      minTime: "07:00:00", // starting time, even when scrolled all the way up
      maxTime: "22:00:00",
      defaultView: "agendaWeek",
      defaultDate: '<%= Date.commercial(@planning.year, @planning.week_number, 1).beginning_of_week %>', // s'ouvre sur le 1e lundi de la semaine sélectionnée
      hiddenDays: [ 0], // hider dimanche
      height: "auto", // implique pas de scroll à l'intérieur du calendrier
      aspectRatio: 4,
      events: '<%= events_planning_path(@planning.id, format: :json) %>',

      // 2. cas où on drag-drop un event déjà existant dans le calendar
      eventDrop: function(event, delta, revertFunc, jsEvent, ui, view ) {
        // récupérer l'id de l'event que l'on droppe
        console.log("event title= " + event.title + "start= " + event.start.format() + "end= " + event.end.format());
        alert("DROOOOPPPPPPEEEEEDDDD !!!!!!!!");
        // modified start => event.start.format()
        // modified end  => event.end.format()
        // lors du display du form, il doit préremplir avec ces 2 dates VS les anciennes
      },

      // au resizing d'un event
      eventResizeStop: function( event, jsEvent, ui, view ) {
        // TODO => envoyer au form la end modifiée.
        var id_slot = event.id // contient id du slot cliqué
        var planning_id = event.planning_id
        var start_at = event.start.format(); // valeur modifiée du start
        var end_at = event.end.format(); // valeur modifiée du end
        $.ajax({
          type: "GET",
          url: Routes.edit_planning_slot_path(planning_id, id_slot,  { format: 'js' } ),
          success: function(data) {
            console.log("ok");
            console.log(calEvent);
          },
          error: function(jqXHR) {
            console.log(jqXHR.responseText);
            console.log("nok");
          }
        });
      },

      // cas où on clique sur un évènement déjà existant dans le calendar
      eventClick: function(calEvent, jsEvent, view) {
        // récupérer l'id de l'event que l'on clique + planning id
        var id_slot = calEvent.id // contient id du slot cliqué
        var planning_id = calEvent.planning_id // contient planning_id du slot cliqué
        // 1 Requête Ajax: plannings/:id/slots/:id/edit.  > pour injecter event id + planning id dans la requete ajax ==> use react, cf https://karr.lewagon.com/lectures/rails/react#/4/2
        $.ajax({
          type: "GET",
          url: Routes.edit_planning_slot_path(planning_id, id_slot,  { format: 'js' } ),
          success: function(data) {
            console.log("ok");
            console.log(calEvent);
          },
          error: function(jqXHR) {
            console.log(jqXHR.responseText);
            console.log("nok");
          }
        });
        console.log("calEvent2 = "+ calEvent);
      },
      eventReceive: function( event ) {
        alert('drop received');
      }
    });
  </script>
  <% end %>
